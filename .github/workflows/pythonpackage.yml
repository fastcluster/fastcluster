name: Test, build, and publish

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[test]
      - name: Run tests
        run: |
          python setup.py test
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@1a5fec7075255d974a4adf330e507dbe4bce6cb7
        env:
          CIBW_ARCHS_LINUX: x86_64 aarch64 i686
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          CIBW_ARCHS_WINDOWS: auto
          CIBW_SKIP: pp* *-musllinux_* *s390x *ppc64le
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.tar.gz
  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # run on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/*
